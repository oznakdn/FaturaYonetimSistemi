// <auto-generated />
using System;
using FaturaYonetimSistemi.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FaturaYonetimSistemi.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220216170036_InitialCreated")]
    partial class InitialCreated
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FaturaYonetimSistemi.Shared.Entities.Aidat", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aciklama")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<string>("Donem")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SonOdemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("Aidatlar");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Aciklama = "Ocak ayı bina tadilat masrafı eklenmiştir.",
                            AktifMi = true,
                            Donem = "Ocak 2022",
                            GuncellemeTarihi = new DateTime(2022, 2, 16, 20, 0, 35, 896, DateTimeKind.Local).AddTicks(1096),
                            OlusturmaTarihi = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SonOdemeTarihi = new DateTime(2022, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Tutar = 200m
                        },
                        new
                        {
                            ID = 2,
                            Aciklama = "Ocak ayı bina tadilat masrafı eklenmiştir.",
                            AktifMi = true,
                            Donem = "Şubat 2022",
                            GuncellemeTarihi = new DateTime(2022, 2, 16, 20, 0, 35, 896, DateTimeKind.Local).AddTicks(1110),
                            OlusturmaTarihi = new DateTime(2022, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SonOdemeTarihi = new DateTime(2022, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Tutar = 200m
                        });
                });

            modelBuilder.Entity("FaturaYonetimSistemi.Shared.Entities.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("FaturaYonetimSistemi.Shared.Entities.Blok", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<string>("BlokAdi")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<short>("ToplamDaire")
                        .HasColumnType("smallint");

                    b.HasKey("ID");

                    b.ToTable("Bloklar");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AktifMi = true,
                            BlokAdi = "A Blok",
                            GuncellemeTarihi = new DateTime(2022, 2, 16, 20, 0, 35, 890, DateTimeKind.Local).AddTicks(8988),
                            OlusturmaTarihi = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ToplamDaire = (short)20
                        });
                });

            modelBuilder.Entity("FaturaYonetimSistemi.Shared.Entities.Daire", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<int>("Blokid")
                        .HasColumnType("int");

                    b.Property<bool>("BosMu")
                        .HasColumnType("bit");

                    b.Property<short>("DaireNo")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<short>("Kat")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("SahibiMi")
                        .HasColumnType("bit");

                    b.Property<string>("Tipi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("Blokid");

                    b.ToTable("Daireler");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AktifMi = true,
                            Blokid = 1,
                            BosMu = false,
                            DaireNo = (short)1,
                            GuncellemeTarihi = new DateTime(2022, 2, 16, 20, 0, 35, 887, DateTimeKind.Local).AddTicks(4423),
                            Kat = (short)1,
                            OlusturmaTarihi = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SahibiMi = true,
                            Tipi = "3+1"
                        },
                        new
                        {
                            ID = 2,
                            AktifMi = true,
                            Blokid = 1,
                            BosMu = true,
                            DaireNo = (short)2,
                            GuncellemeTarihi = new DateTime(2022, 2, 16, 20, 0, 35, 887, DateTimeKind.Local).AddTicks(5382),
                            Kat = (short)1,
                            OlusturmaTarihi = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SahibiMi = false,
                            Tipi = "2+1"
                        },
                        new
                        {
                            ID = 3,
                            AktifMi = true,
                            Blokid = 1,
                            BosMu = false,
                            DaireNo = (short)3,
                            GuncellemeTarihi = new DateTime(2022, 2, 16, 20, 0, 35, 887, DateTimeKind.Local).AddTicks(5387),
                            Kat = (short)2,
                            OlusturmaTarihi = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SahibiMi = false,
                            Tipi = "3+1"
                        },
                        new
                        {
                            ID = 4,
                            AktifMi = true,
                            Blokid = 1,
                            BosMu = true,
                            DaireNo = (short)4,
                            GuncellemeTarihi = new DateTime(2022, 2, 16, 20, 0, 35, 887, DateTimeKind.Local).AddTicks(5391),
                            Kat = (short)2,
                            OlusturmaTarihi = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SahibiMi = false,
                            Tipi = "2+1"
                        });
                });

            modelBuilder.Entity("FaturaYonetimSistemi.Shared.Entities.Fatura", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aciklama")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<string>("FaturaAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SonOdemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("Faturalar");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Aciklama = "Şubat 2022 elektrik faturası",
                            AktifMi = true,
                            FaturaAdi = "Elektrik",
                            GuncellemeTarihi = new DateTime(2022, 2, 16, 20, 0, 35, 897, DateTimeKind.Local).AddTicks(7851),
                            OlusturmaTarihi = new DateTime(2022, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SonOdemeTarihi = new DateTime(2022, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Tutar = 100m
                        },
                        new
                        {
                            ID = 2,
                            Aciklama = "Şubat 2022 su faturası",
                            AktifMi = true,
                            FaturaAdi = "Su",
                            GuncellemeTarihi = new DateTime(2022, 2, 16, 20, 0, 35, 897, DateTimeKind.Local).AddTicks(7863),
                            OlusturmaTarihi = new DateTime(2022, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SonOdemeTarihi = new DateTime(2022, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Tutar = 50m
                        });
                });

            modelBuilder.Entity("FaturaYonetimSistemi.Shared.Entities.Kullanici", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<bool>("Arac")
                        .HasColumnType("bit");

                    b.Property<int>("DaireId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Fotograf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plaka")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<long>("TCNo")
                        .HasColumnType("bigint");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("ID");

                    b.HasIndex("DaireId");

                    b.HasIndex("TCNo")
                        .IsUnique();

                    b.ToTable("Kullanicilar");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Ad = "Ali",
                            AktifMi = true,
                            Arac = false,
                            DaireId = 1,
                            Email = "aliguzel@mail.com",
                            Fotograf = "https://statics.altinyildizclassics.com/mnresize/380/521/productimages/4A3022100062_LAM_1.jpg",
                            GuncellemeTarihi = new DateTime(2022, 2, 16, 20, 0, 35, 893, DateTimeKind.Local).AddTicks(8009),
                            OlusturmaTarihi = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Plaka = "",
                            Soyad = "Güzel",
                            TCNo = 12345678910L,
                            Telefon = "05001002030"
                        },
                        new
                        {
                            ID = 2,
                            Ad = "Veli",
                            AktifMi = true,
                            Arac = true,
                            DaireId = 3,
                            Email = "velisever@mail.com",
                            Fotograf = "https://cdn.sorsware.com/ramsey/ContentImages/Product/2019-1/10112785/duz-dokuma-ceket_lacivert-lacivert_1_buyuk.JPG",
                            GuncellemeTarihi = new DateTime(2022, 2, 16, 20, 0, 35, 893, DateTimeKind.Local).AddTicks(8028),
                            OlusturmaTarihi = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Plaka = "34 ABC 100",
                            Soyad = "Sever",
                            TCNo = 10987654321L,
                            Telefon = "05002003040"
                        });
                });

            modelBuilder.Entity("FaturaYonetimSistemi.Shared.Entities.KullaniciAidat", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AidatId")
                        .HasColumnType("int");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<bool>("OdendiMi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("OdenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("AidatId");

                    b.HasIndex("KullaniciId", "AidatId")
                        .IsUnique();

                    b.ToTable("KullaniciAidatlar");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AidatId = 1,
                            AktifMi = true,
                            GuncellemeTarihi = new DateTime(2022, 2, 16, 20, 0, 35, 899, DateTimeKind.Local).AddTicks(3044),
                            KullaniciId = 1,
                            OdendiMi = false,
                            OlusturmaTarihi = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            AidatId = 2,
                            AktifMi = true,
                            GuncellemeTarihi = new DateTime(2022, 2, 16, 20, 0, 35, 899, DateTimeKind.Local).AddTicks(3058),
                            KullaniciId = 1,
                            OdendiMi = false,
                            OlusturmaTarihi = new DateTime(2022, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            AidatId = 1,
                            AktifMi = true,
                            GuncellemeTarihi = new DateTime(2022, 2, 16, 20, 0, 35, 899, DateTimeKind.Local).AddTicks(3062),
                            KullaniciId = 2,
                            OdendiMi = false,
                            OlusturmaTarihi = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 4,
                            AidatId = 2,
                            AktifMi = true,
                            GuncellemeTarihi = new DateTime(2022, 2, 16, 20, 0, 35, 899, DateTimeKind.Local).AddTicks(3065),
                            KullaniciId = 2,
                            OdendiMi = false,
                            OlusturmaTarihi = new DateTime(2022, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("FaturaYonetimSistemi.Shared.Entities.KullaniciFatura", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<int>("FaturaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OdemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("OdendiMi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("FaturaId");

                    b.HasIndex("KullaniciId", "FaturaId")
                        .IsUnique();

                    b.ToTable("KullaniciFaturalar");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AktifMi = true,
                            FaturaId = 1,
                            GuncellemeTarihi = new DateTime(2022, 2, 16, 20, 0, 35, 900, DateTimeKind.Local).AddTicks(8247),
                            KullaniciId = 1,
                            OdendiMi = false,
                            OlusturmaTarihi = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            AktifMi = true,
                            FaturaId = 2,
                            GuncellemeTarihi = new DateTime(2022, 2, 16, 20, 0, 35, 900, DateTimeKind.Local).AddTicks(8260),
                            KullaniciId = 1,
                            OdendiMi = false,
                            OlusturmaTarihi = new DateTime(2022, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            AktifMi = true,
                            FaturaId = 1,
                            GuncellemeTarihi = new DateTime(2022, 2, 16, 20, 0, 35, 900, DateTimeKind.Local).AddTicks(8275),
                            KullaniciId = 2,
                            OdendiMi = false,
                            OlusturmaTarihi = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 4,
                            AktifMi = true,
                            FaturaId = 2,
                            GuncellemeTarihi = new DateTime(2022, 2, 16, 20, 0, 35, 900, DateTimeKind.Local).AddTicks(8279),
                            KullaniciId = 2,
                            OdendiMi = false,
                            OlusturmaTarihi = new DateTime(2022, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("FaturaYonetimSistemi.Shared.Entities.Mesaj", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Konu")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("KullaniciId");

                    b.ToTable("Mesajlar");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AktifMi = true,
                            GuncellemeTarihi = new DateTime(2022, 2, 16, 20, 0, 35, 901, DateTimeKind.Local).AddTicks(9696),
                            Icerik = "Ağaç ve çiçeklerin bakımı",
                            Konu = "Çevre düzenleme",
                            KullaniciId = 1,
                            OlusturmaTarihi = new DateTime(2022, 2, 16, 20, 0, 35, 901, DateTimeKind.Local).AddTicks(9688)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("FaturaYonetimSistemi.Shared.Entities.AppUser", b =>
                {
                    b.HasOne("FaturaYonetimSistemi.Shared.Entities.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("FaturaYonetimSistemi.Shared.Entities.Daire", b =>
                {
                    b.HasOne("FaturaYonetimSistemi.Shared.Entities.Blok", "Blok")
                        .WithMany("Daireler")
                        .HasForeignKey("Blokid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blok");
                });

            modelBuilder.Entity("FaturaYonetimSistemi.Shared.Entities.Kullanici", b =>
                {
                    b.HasOne("FaturaYonetimSistemi.Shared.Entities.Daire", "Daire")
                        .WithMany()
                        .HasForeignKey("DaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Daire");
                });

            modelBuilder.Entity("FaturaYonetimSistemi.Shared.Entities.KullaniciAidat", b =>
                {
                    b.HasOne("FaturaYonetimSistemi.Shared.Entities.Aidat", "Aidat")
                        .WithMany("KullaniciAidatlar")
                        .HasForeignKey("AidatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FaturaYonetimSistemi.Shared.Entities.Kullanici", "Kullanici")
                        .WithMany("KullaniciAidatlar")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aidat");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("FaturaYonetimSistemi.Shared.Entities.KullaniciFatura", b =>
                {
                    b.HasOne("FaturaYonetimSistemi.Shared.Entities.Fatura", "Fatura")
                        .WithMany("KullaniciFaturalar")
                        .HasForeignKey("FaturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FaturaYonetimSistemi.Shared.Entities.Kullanici", "Kullanici")
                        .WithMany("KullaniciFaturalar")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fatura");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("FaturaYonetimSistemi.Shared.Entities.Mesaj", b =>
                {
                    b.HasOne("FaturaYonetimSistemi.Shared.Entities.Kullanici", "Kullanici")
                        .WithMany("Mesajlar")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("FaturaYonetimSistemi.Shared.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("FaturaYonetimSistemi.Shared.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FaturaYonetimSistemi.Shared.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("FaturaYonetimSistemi.Shared.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FaturaYonetimSistemi.Shared.Entities.Aidat", b =>
                {
                    b.Navigation("KullaniciAidatlar");
                });

            modelBuilder.Entity("FaturaYonetimSistemi.Shared.Entities.Blok", b =>
                {
                    b.Navigation("Daireler");
                });

            modelBuilder.Entity("FaturaYonetimSistemi.Shared.Entities.Fatura", b =>
                {
                    b.Navigation("KullaniciFaturalar");
                });

            modelBuilder.Entity("FaturaYonetimSistemi.Shared.Entities.Kullanici", b =>
                {
                    b.Navigation("KullaniciAidatlar");

                    b.Navigation("KullaniciFaturalar");

                    b.Navigation("Mesajlar");
                });
#pragma warning restore 612, 618
        }
    }
}
